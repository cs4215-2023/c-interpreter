// Generated from ./src/lang/Clang.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class ClangLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly T__12 = 13;
	public static readonly T__13 = 14;
	public static readonly T__14 = 15;
	public static readonly T__15 = 16;
	public static readonly T__16 = 17;
	public static readonly T__17 = 18;
	public static readonly T__18 = 19;
	public static readonly T__19 = 20;
	public static readonly T__20 = 21;
	public static readonly T__21 = 22;
	public static readonly T__22 = 23;
	public static readonly T__23 = 24;
	public static readonly T__24 = 25;
	public static readonly T__25 = 26;
	public static readonly T__26 = 27;
	public static readonly T__27 = 28;
	public static readonly T__28 = 29;
	public static readonly T__29 = 30;
	public static readonly T__30 = 31;
	public static readonly T__31 = 32;
	public static readonly T__32 = 33;
	public static readonly T__33 = 34;
	public static readonly T__34 = 35;
	public static readonly T__35 = 36;
	public static readonly WHITESPACE = 37;
	public static readonly NEWLINE = 38;
	public static readonly PRIMITIVETYPE = 39;
	public static readonly SIGN = 40;
	public static readonly IDENTIFIER = 41;
	public static readonly NUMBER = 42;
	public static readonly PLUSPLUS = 43;
	public static readonly MINUSMINUS = 44;
	public static readonly StringLiteral = 45;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "WHITESPACE", "NEWLINE", "PRIMITIVETYPE", "SIGN", 
		"IDENTIFIER", "NUMBER", "PLUSPLUS", "MINUSMINUS", "StringLiteral",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "','", "'{'", "'}'", "'('", "')'", "'*'", "'/'", "'%'", "'+'", 
		"'-'", "'<<'", "'>>'", "'>'", "'<'", "'>='", "'<='", "'=='", "'!='", "'||'", 
		"'&&'", "'&'", "'|'", "'^'", "'='", "'-='", "'+='", "'?'", "':'", "';'", 
		"'if'", "'else'", "'while'", "'do'", "'for'", "'['", "']'", undefined, 
		undefined, undefined, undefined, undefined, undefined, "'++'", "'--'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, "WHITESPACE", "NEWLINE", "PRIMITIVETYPE", "SIGN", 
		"IDENTIFIER", "NUMBER", "PLUSPLUS", "MINUSMINUS", "StringLiteral",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(ClangLexer._LITERAL_NAMES, ClangLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return ClangLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(ClangLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "Clang.g4"; }

	// @Override
	public get ruleNames(): string[] { return ClangLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return ClangLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return ClangLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return ClangLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02/\u010A\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x03\x02\x03\x02\x03\x03\x03\x03\x03\x04\x03" +
		"\x04\x03\x05\x03\x05\x03\x06\x03\x06\x03\x07\x03\x07\x03\b\x03\b\x03\t" +
		"\x03\t\x03\n\x03\n\x03\v\x03\v\x03\f\x03\f\x03\f\x03\r\x03\r\x03\r\x03" +
		"\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x10\x03\x11\x03\x11\x03" +
		"\x11\x03\x12\x03\x12\x03\x12\x03\x13\x03\x13\x03\x13\x03\x14\x03\x14\x03" +
		"\x14\x03\x15\x03\x15\x03\x15\x03\x16\x03\x16\x03\x17\x03\x17\x03\x18\x03" +
		"\x18\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1B\x03" +
		"\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03\x1F\x03" +
		" \x03 \x03 \x03 \x03 \x03!\x03!\x03!\x03!\x03!\x03!\x03\"\x03\"\x03\"" +
		"\x03#\x03#\x03#\x03#\x03$\x03$\x03%\x03%\x03&\x06&\xBC\n&\r&\x0E&\xBD" +
		"\x03&\x03&\x03\'\x03\'\x05\'\xC4\n\'\x03\'\x05\'\xC7\n\'\x03\'\x03\'\x03" +
		"(\x03(\x03(\x03(\x03(\x03(\x03(\x03(\x03(\x03(\x03(\x03(\x03(\x03(\x03" +
		"(\x03(\x03(\x03(\x03(\x03(\x03(\x03(\x03(\x03(\x03(\x03(\x03(\x03(\x03" +
		"(\x03(\x05(\xE9\n(\x03)\x03)\x03*\x05*\xEE\n*\x03*\x03*\x07*\xF2\n*\f" +
		"*\x0E*\xF5\v*\x03+\x05+\xF8\n+\x03+\x06+\xFB\n+\r+\x0E+\xFC\x03,\x03," +
		"\x03,\x03-\x03-\x03-\x03.\x03.\x05.\u0107\n.\x03.\x03.\x02\x02\x02/\x03" +
		"\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t" +
		"\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02" +
		"\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02\x16+\x02\x17" +
		"-\x02\x18/\x02\x191\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02\x1E;\x02\x1F" +
		"=\x02 ?\x02!A\x02\"C\x02#E\x02$G\x02%I\x02&K\x02\'M\x02(O\x02)Q\x02*S" +
		"\x02+U\x02,W\x02-Y\x02.[\x02/\x03\x02\x07\x04\x02\v\v\"\"\x04\x02--//" +
		"\x05\x02C\\aac|\x06\x022;C\\aac|\x04\x022;aa\x02\u0116\x02\x03\x03\x02" +
		"\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02" +
		"\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02" +
		"\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02" +
		"\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02" +
		"\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02" +
		"\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02" +
		")\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02" +
		"\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02\x02" +
		"\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02=\x03" +
		"\x02\x02\x02\x02?\x03\x02\x02\x02\x02A\x03\x02\x02\x02\x02C\x03\x02\x02" +
		"\x02\x02E\x03\x02\x02\x02\x02G\x03\x02\x02\x02\x02I\x03\x02\x02\x02\x02" +
		"K\x03\x02\x02\x02\x02M\x03\x02\x02\x02\x02O\x03\x02\x02\x02\x02Q\x03\x02" +
		"\x02\x02\x02S\x03\x02\x02\x02\x02U\x03\x02\x02\x02\x02W\x03\x02\x02\x02" +
		"\x02Y\x03\x02\x02\x02\x02[\x03\x02\x02\x02\x03]\x03\x02\x02\x02\x05_\x03" +
		"\x02\x02\x02\x07a\x03\x02\x02\x02\tc\x03\x02\x02\x02\ve\x03\x02\x02\x02" +
		"\rg\x03\x02\x02\x02\x0Fi\x03\x02\x02\x02\x11k\x03\x02\x02\x02\x13m\x03" +
		"\x02\x02\x02\x15o\x03\x02\x02\x02\x17q\x03\x02\x02\x02\x19t\x03\x02\x02" +
		"\x02\x1Bw\x03\x02\x02\x02\x1Dy\x03\x02\x02\x02\x1F{\x03\x02\x02\x02!~" +
		"\x03\x02\x02\x02#\x81\x03\x02\x02\x02%\x84\x03\x02\x02\x02\'\x87\x03\x02" +
		"\x02\x02)\x8A\x03\x02\x02\x02+\x8D\x03\x02\x02\x02-\x8F\x03\x02\x02\x02" +
		"/\x91\x03\x02\x02\x021\x93\x03\x02\x02\x023\x95\x03\x02\x02\x025\x98\x03" +
		"\x02\x02\x027\x9B\x03\x02\x02\x029\x9D\x03\x02\x02\x02;\x9F\x03\x02\x02" +
		"\x02=\xA1\x03\x02\x02\x02?\xA4\x03\x02\x02\x02A\xA9\x03\x02\x02\x02C\xAF" +
		"\x03\x02\x02\x02E\xB2\x03\x02\x02\x02G\xB6\x03\x02\x02\x02I\xB8\x03\x02" +
		"\x02\x02K\xBB\x03\x02\x02\x02M\xC6\x03\x02\x02\x02O\xE8\x03\x02\x02\x02" +
		"Q\xEA\x03\x02\x02\x02S\xED\x03\x02\x02\x02U\xF7\x03\x02\x02\x02W\xFE\x03" +
		"\x02\x02\x02Y\u0101\x03\x02\x02\x02[\u0104\x03\x02\x02\x02]^\x07.\x02" +
		"\x02^\x04\x03\x02\x02\x02_`\x07}\x02\x02`\x06\x03\x02\x02\x02ab\x07\x7F" +
		"\x02\x02b\b\x03\x02\x02\x02cd\x07*\x02\x02d\n\x03\x02\x02\x02ef\x07+\x02" +
		"\x02f\f\x03\x02\x02\x02gh\x07,\x02\x02h\x0E\x03\x02\x02\x02ij\x071\x02" +
		"\x02j\x10\x03\x02\x02\x02kl\x07\'\x02\x02l\x12\x03\x02\x02\x02mn\x07-" +
		"\x02\x02n\x14\x03\x02\x02\x02op\x07/\x02\x02p\x16\x03\x02\x02\x02qr\x07" +
		">\x02\x02rs\x07>\x02\x02s\x18\x03\x02\x02\x02tu\x07@\x02\x02uv\x07@\x02" +
		"\x02v\x1A\x03\x02\x02\x02wx\x07@\x02\x02x\x1C\x03\x02\x02\x02yz\x07>\x02" +
		"\x02z\x1E\x03\x02\x02\x02{|\x07@\x02\x02|}\x07?\x02\x02} \x03\x02\x02" +
		"\x02~\x7F\x07>\x02\x02\x7F\x80\x07?\x02\x02\x80\"\x03\x02\x02\x02\x81" +
		"\x82\x07?\x02\x02\x82\x83\x07?\x02\x02\x83$\x03\x02\x02\x02\x84\x85\x07" +
		"#\x02\x02\x85\x86\x07?\x02\x02\x86&\x03\x02\x02\x02\x87\x88\x07~\x02\x02" +
		"\x88\x89\x07~\x02\x02\x89(\x03\x02\x02\x02\x8A\x8B\x07(\x02\x02\x8B\x8C" +
		"\x07(\x02\x02\x8C*\x03\x02\x02\x02\x8D\x8E\x07(\x02\x02\x8E,\x03\x02\x02" +
		"\x02\x8F\x90\x07~\x02\x02\x90.\x03\x02\x02\x02\x91\x92\x07`\x02\x02\x92" +
		"0\x03\x02\x02\x02\x93\x94\x07?\x02\x02\x942\x03\x02\x02\x02\x95\x96\x07" +
		"/\x02\x02\x96\x97\x07?\x02\x02\x974\x03\x02\x02\x02\x98\x99\x07-\x02\x02" +
		"\x99\x9A\x07?\x02\x02\x9A6\x03\x02\x02\x02\x9B\x9C\x07A\x02\x02\x9C8\x03" +
		"\x02\x02\x02\x9D\x9E\x07<\x02\x02\x9E:\x03\x02\x02\x02\x9F\xA0\x07=\x02" +
		"\x02\xA0<\x03\x02\x02\x02\xA1\xA2\x07k\x02\x02\xA2\xA3\x07h\x02\x02\xA3" +
		">\x03\x02\x02\x02\xA4\xA5\x07g\x02\x02\xA5\xA6\x07n\x02\x02\xA6\xA7\x07" +
		"u\x02\x02\xA7\xA8\x07g\x02\x02\xA8@\x03\x02\x02\x02\xA9\xAA\x07y\x02\x02" +
		"\xAA\xAB\x07j\x02\x02\xAB\xAC\x07k\x02\x02\xAC\xAD\x07n\x02\x02\xAD\xAE" +
		"\x07g\x02\x02\xAEB\x03\x02\x02\x02\xAF\xB0\x07f\x02\x02\xB0\xB1\x07q\x02" +
		"\x02\xB1D\x03\x02\x02\x02\xB2\xB3\x07h\x02\x02\xB3\xB4\x07q\x02\x02\xB4" +
		"\xB5\x07t\x02\x02\xB5F\x03\x02\x02\x02\xB6\xB7\x07]\x02\x02\xB7H\x03\x02" +
		"\x02\x02\xB8\xB9\x07_\x02\x02\xB9J\x03\x02\x02\x02\xBA\xBC\t\x02\x02\x02" +
		"\xBB\xBA\x03\x02\x02\x02\xBC\xBD\x03\x02\x02\x02\xBD\xBB\x03\x02\x02\x02" +
		"\xBD\xBE\x03\x02\x02\x02\xBE\xBF\x03\x02\x02\x02\xBF\xC0\b&\x02\x02\xC0" +
		"L\x03\x02\x02\x02\xC1\xC3\x07\x0F\x02\x02\xC2\xC4\x07\f\x02\x02\xC3\xC2" +
		"\x03\x02\x02\x02\xC3\xC4\x03\x02\x02\x02\xC4\xC7\x03\x02\x02\x02\xC5\xC7" +
		"\x07\f\x02\x02\xC6\xC1\x03\x02\x02\x02\xC6\xC5\x03\x02\x02\x02\xC7\xC8" +
		"\x03\x02\x02\x02\xC8\xC9\b\'\x02\x02\xC9N\x03\x02\x02\x02\xCA\xCB\x07" +
		"x\x02\x02\xCB\xCC\x07q\x02\x02\xCC\xCD\x07k\x02\x02\xCD\xE9\x07f\x02\x02" +
		"\xCE\xCF\x07e\x02\x02\xCF\xD0\x07j\x02\x02\xD0\xD1\x07c\x02\x02\xD1\xE9" +
		"\x07t\x02\x02\xD2\xD3\x07k\x02\x02\xD3\xD4\x07p\x02\x02\xD4\xE9\x07v\x02" +
		"\x02\xD5\xD6\x07h\x02\x02\xD6\xD7\x07n\x02\x02\xD7\xD8\x07q\x02\x02\xD8" +
		"\xD9\x07c\x02\x02\xD9\xE9\x07v\x02\x02\xDA\xDB\x07u\x02\x02\xDB\xDC\x07" +
		"k\x02\x02\xDC\xDD\x07i\x02\x02\xDD\xDE\x07p\x02\x02\xDE\xDF\x07g\x02\x02" +
		"\xDF\xE9\x07f\x02\x02\xE0\xE1\x07w\x02\x02\xE1\xE2\x07p\x02\x02\xE2\xE3" +
		"\x07u\x02\x02\xE3\xE4\x07k\x02\x02\xE4\xE5\x07i\x02\x02\xE5\xE6\x07p\x02" +
		"\x02\xE6\xE7\x07g\x02\x02\xE7\xE9\x07f\x02\x02\xE8\xCA\x03\x02\x02\x02" +
		"\xE8\xCE\x03\x02\x02\x02\xE8\xD2\x03\x02\x02\x02\xE8\xD5\x03\x02\x02\x02" +
		"\xE8\xDA\x03\x02\x02\x02\xE8\xE0\x03\x02\x02\x02\xE9P\x03\x02\x02\x02" +
		"\xEA\xEB\t\x03\x02\x02\xEBR\x03\x02\x02\x02\xEC\xEE\x05Q)\x02\xED\xEC" +
		"\x03\x02\x02\x02\xED\xEE\x03\x02\x02\x02\xEE\xEF\x03\x02\x02\x02\xEF\xF3" +
		"\t\x04\x02\x02\xF0\xF2\t\x05\x02\x02\xF1\xF0\x03\x02\x02\x02\xF2\xF5\x03" +
		"\x02\x02\x02\xF3\xF1\x03\x02\x02\x02\xF3\xF4\x03\x02\x02\x02\xF4T\x03" +
		"\x02\x02\x02\xF5\xF3\x03\x02\x02\x02\xF6\xF8\x05Q)\x02\xF7\xF6\x03\x02" +
		"\x02\x02\xF7\xF8\x03\x02\x02\x02\xF8\xFA\x03\x02\x02\x02\xF9\xFB\t\x06" +
		"\x02\x02\xFA\xF9\x03\x02\x02\x02\xFB\xFC\x03\x02\x02\x02\xFC\xFA\x03\x02" +
		"\x02\x02\xFC\xFD\x03\x02\x02\x02\xFDV\x03\x02\x02\x02\xFE\xFF\x07-\x02" +
		"\x02\xFF\u0100\x07-\x02\x02\u0100X\x03\x02\x02\x02\u0101\u0102\x07/\x02" +
		"\x02\u0102\u0103\x07/\x02\x02\u0103Z\x03\x02\x02\x02\u0104\u0106\x07$" +
		"\x02\x02\u0105\u0107\x05S*\x02\u0106\u0105\x03\x02\x02\x02\u0106\u0107" +
		"\x03\x02\x02\x02\u0107\u0108\x03\x02\x02\x02\u0108\u0109\x07$\x02\x02" +
		"\u0109\\\x03\x02\x02\x02\f\x02\xBD\xC3\xC6\xE8\xED\xF3\xF7\xFC\u0106\x03" +
		"\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!ClangLexer.__ATN) {
			ClangLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(ClangLexer._serializedATN));
		}

		return ClangLexer.__ATN;
	}

}

