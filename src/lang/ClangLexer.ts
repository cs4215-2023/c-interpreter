// Generated from ./src/lang/Clang.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class ClangLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly T__12 = 13;
	public static readonly T__13 = 14;
	public static readonly T__14 = 15;
	public static readonly T__15 = 16;
	public static readonly T__16 = 17;
	public static readonly T__17 = 18;
	public static readonly T__18 = 19;
	public static readonly T__19 = 20;
	public static readonly T__20 = 21;
	public static readonly T__21 = 22;
	public static readonly T__22 = 23;
	public static readonly T__23 = 24;
	public static readonly T__24 = 25;
	public static readonly T__25 = 26;
	public static readonly T__26 = 27;
	public static readonly T__27 = 28;
	public static readonly T__28 = 29;
	public static readonly T__29 = 30;
	public static readonly T__30 = 31;
	public static readonly T__31 = 32;
	public static readonly T__32 = 33;
	public static readonly T__33 = 34;
	public static readonly T__34 = 35;
	public static readonly T__35 = 36;
	public static readonly T__36 = 37;
	public static readonly T__37 = 38;
	public static readonly WHITESPACE = 39;
	public static readonly NEWLINE = 40;
	public static readonly PRIMITIVETYPE = 41;
	public static readonly SIGN = 42;
	public static readonly IDENTIFIER = 43;
	public static readonly FORMATSPECIFIERS = 44;
	public static readonly NUMBER = 45;
	public static readonly CHAR = 46;
	public static readonly FLOAT = 47;
	public static readonly PLUSPLUS = 48;
	public static readonly MINUSMINUS = 49;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "T__36", "T__37", "WHITESPACE", "NEWLINE", 
		"PRIMITIVETYPE", "SIGN", "IDENTIFIER", "FORMATSPECIFIERS", "NUMBER", "CHAR", 
		"FLOAT", "PLUSPLUS", "MINUSMINUS",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'\"'", "','", "'('", "')'", "'*'", "'/'", "'%'", "'+'", "'-'", 
		"'<<'", "'>>'", "'>'", "'<'", "'>='", "'<='", "'=='", "'!='", "'||'", 
		"'&&'", "'&'", "'|'", "'^'", "'='", "'-='", "'+='", "'{'", "'}'", "'?'", 
		"':'", "';'", "'if'", "'else'", "'while'", "'do'", "'for'", "'['", "']'", 
		"'printf('", undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, "'++'", "'--'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, "WHITESPACE", "NEWLINE", "PRIMITIVETYPE", 
		"SIGN", "IDENTIFIER", "FORMATSPECIFIERS", "NUMBER", "CHAR", "FLOAT", "PLUSPLUS", 
		"MINUSMINUS",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(ClangLexer._LITERAL_NAMES, ClangLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return ClangLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(ClangLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "Clang.g4"; }

	// @Override
	public get ruleNames(): string[] { return ClangLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return ClangLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return ClangLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return ClangLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x023\u0146\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x03\x02\x03" +
		"\x02\x03\x03\x03\x03\x03\x04\x03\x04\x03\x05\x03\x05\x03\x06\x03\x06\x03" +
		"\x07\x03\x07\x03\b\x03\b\x03\t\x03\t\x03\n\x03\n\x03\v\x03\v\x03\v\x03" +
		"\f\x03\f\x03\f\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x0F\x03" +
		"\x10\x03\x10\x03\x10\x03\x11\x03\x11\x03\x11\x03\x12\x03\x12\x03\x12\x03" +
		"\x13\x03\x13\x03\x13\x03\x14\x03\x14\x03\x14\x03\x15\x03\x15\x03\x16\x03" +
		"\x16\x03\x17\x03\x17\x03\x18\x03\x18\x03\x19\x03\x19\x03\x19\x03\x1A\x03" +
		"\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1E\x03" +
		"\x1E\x03\x1F\x03\x1F\x03 \x03 \x03 \x03!\x03!\x03!\x03!\x03!\x03\"\x03" +
		"\"\x03\"\x03\"\x03\"\x03\"\x03#\x03#\x03#\x03$\x03$\x03$\x03$\x03%\x03" +
		"%\x03&\x03&\x03\'\x03\'\x03\'\x03\'\x03\'\x03\'\x03\'\x03\'\x03(\x06(" +
		"\xCE\n(\r(\x0E(\xCF\x03(\x03(\x03)\x03)\x05)\xD6\n)\x03)\x05)\xD9\n)\x03" +
		")\x03)\x03*\x03*\x03*\x03*\x03*\x03*\x03*\x03*\x03*\x03*\x03*\x03*\x03" +
		"*\x03*\x03*\x03*\x03*\x03*\x03*\x03*\x03*\x03*\x03*\x03*\x03*\x03*\x03" +
		"*\x03*\x03*\x03*\x05*\xFB\n*\x03+\x03+\x03,\x05,\u0100\n,\x03,\x03,\x07" +
		",\u0104\n,\f,\x0E,\u0107\v,\x03-\x03-\x03-\x03-\x03-\x03-\x03-\x03-\x03" +
		"-\x03-\x03-\x03-\x03-\x03-\x03-\x03-\x03-\x03-\x03-\x03-\x03-\x03-\x03" +
		"-\x03-\x03-\x03-\x03-\x03-\x03-\x03-\x05-\u0127\n-\x03.\x05.\u012A\n." +
		"\x03.\x06.\u012D\n.\r.\x0E.\u012E\x03/\x03/\x03/\x03/\x030\x060\u0136" +
		"\n0\r0\x0E0\u0137\x030\x030\x070\u013C\n0\f0\x0E0\u013F\v0\x031\x031\x03" +
		"1\x032\x032\x032\x02\x02\x023\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02" +
		"\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02" +
		"\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13%" +
		"\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x191\x02\x1A3\x02\x1B" +
		"5\x02\x1C7\x02\x1D9\x02\x1E;\x02\x1F=\x02 ?\x02!A\x02\"C\x02#E\x02$G\x02" +
		"%I\x02&K\x02\'M\x02(O\x02)Q\x02*S\x02+U\x02,W\x02-Y\x02.[\x02/]\x020_" +
		"\x021a\x022c\x023\x03\x02\b\x04\x02\v\v\"\"\x04\x02--//\x05\x02C\\aac" +
		"|\x06\x022;C\\aac|\x04\x022;aa\x04\x02++__\x02\u0158\x02\x03\x03\x02\x02" +
		"\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02" +
		"\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02" +
		"\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02" +
		"\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02" +
		"\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02" +
		"\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02)" +
		"\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02" +
		"\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02\x02" +
		"\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02=\x03" +
		"\x02\x02\x02\x02?\x03\x02\x02\x02\x02A\x03\x02\x02\x02\x02C\x03\x02\x02" +
		"\x02\x02E\x03\x02\x02\x02\x02G\x03\x02\x02\x02\x02I\x03\x02\x02\x02\x02" +
		"K\x03\x02\x02\x02\x02M\x03\x02\x02\x02\x02O\x03\x02\x02\x02\x02Q\x03\x02" +
		"\x02\x02\x02S\x03\x02\x02\x02\x02U\x03\x02\x02\x02\x02W\x03\x02\x02\x02" +
		"\x02Y\x03\x02\x02\x02\x02[\x03\x02\x02\x02\x02]\x03\x02\x02\x02\x02_\x03" +
		"\x02\x02\x02\x02a\x03\x02\x02\x02\x02c\x03\x02\x02\x02\x03e\x03\x02\x02" +
		"\x02\x05g\x03\x02\x02\x02\x07i\x03\x02\x02\x02\tk\x03\x02\x02\x02\vm\x03" +
		"\x02\x02\x02\ro\x03\x02\x02\x02\x0Fq\x03\x02\x02\x02\x11s\x03\x02\x02" +
		"\x02\x13u\x03\x02\x02\x02\x15w\x03\x02\x02\x02\x17z\x03\x02\x02\x02\x19" +
		"}\x03\x02\x02\x02\x1B\x7F\x03\x02\x02\x02\x1D\x81\x03\x02\x02\x02\x1F" +
		"\x84\x03\x02\x02\x02!\x87\x03\x02\x02\x02#\x8A\x03\x02\x02\x02%\x8D\x03" +
		"\x02\x02\x02\'\x90\x03\x02\x02\x02)\x93\x03\x02\x02\x02+\x95\x03\x02\x02" +
		"\x02-\x97\x03\x02\x02\x02/\x99\x03\x02\x02\x021\x9B\x03\x02\x02\x023\x9E" +
		"\x03\x02\x02\x025\xA1\x03\x02\x02\x027\xA3\x03\x02\x02\x029\xA5\x03\x02" +
		"\x02\x02;\xA7\x03\x02\x02\x02=\xA9\x03\x02\x02\x02?\xAB\x03\x02\x02\x02" +
		"A\xAE\x03\x02\x02\x02C\xB3\x03\x02\x02\x02E\xB9\x03\x02\x02\x02G\xBC\x03" +
		"\x02\x02\x02I\xC0\x03\x02\x02\x02K\xC2\x03\x02\x02\x02M\xC4\x03\x02\x02" +
		"\x02O\xCD\x03\x02\x02\x02Q\xD8\x03\x02\x02\x02S\xFA\x03\x02\x02\x02U\xFC" +
		"\x03\x02\x02\x02W\xFF\x03\x02\x02\x02Y\u0126\x03\x02\x02\x02[\u0129\x03" +
		"\x02\x02\x02]\u0130\x03\x02\x02\x02_\u0135\x03\x02\x02\x02a\u0140\x03" +
		"\x02\x02\x02c\u0143\x03\x02\x02\x02ef\x07$\x02\x02f\x04\x03\x02\x02\x02" +
		"gh\x07.\x02\x02h\x06\x03\x02\x02\x02ij\x07*\x02\x02j\b\x03\x02\x02\x02" +
		"kl\x07+\x02\x02l\n\x03\x02\x02\x02mn\x07,\x02\x02n\f\x03\x02\x02\x02o" +
		"p\x071\x02\x02p\x0E\x03\x02\x02\x02qr\x07\'\x02\x02r\x10\x03\x02\x02\x02" +
		"st\x07-\x02\x02t\x12\x03\x02\x02\x02uv\x07/\x02\x02v\x14\x03\x02\x02\x02" +
		"wx\x07>\x02\x02xy\x07>\x02\x02y\x16\x03\x02\x02\x02z{\x07@\x02\x02{|\x07" +
		"@\x02\x02|\x18\x03\x02\x02\x02}~\x07@\x02\x02~\x1A\x03\x02\x02\x02\x7F" +
		"\x80\x07>\x02\x02\x80\x1C\x03\x02\x02\x02\x81\x82\x07@\x02\x02\x82\x83" +
		"\x07?\x02\x02\x83\x1E\x03\x02\x02\x02\x84\x85\x07>\x02\x02\x85\x86\x07" +
		"?\x02\x02\x86 \x03\x02\x02\x02\x87\x88\x07?\x02\x02\x88\x89\x07?\x02\x02" +
		"\x89\"\x03\x02\x02\x02\x8A\x8B\x07#\x02\x02\x8B\x8C\x07?\x02\x02\x8C$" +
		"\x03\x02\x02\x02\x8D\x8E\x07~\x02\x02\x8E\x8F\x07~\x02\x02\x8F&\x03\x02" +
		"\x02\x02\x90\x91\x07(\x02\x02\x91\x92\x07(\x02\x02\x92(\x03\x02\x02\x02" +
		"\x93\x94\x07(\x02\x02\x94*\x03\x02\x02\x02\x95\x96\x07~\x02\x02\x96,\x03" +
		"\x02\x02\x02\x97\x98\x07`\x02\x02\x98.\x03\x02\x02\x02\x99\x9A\x07?\x02" +
		"\x02\x9A0\x03\x02\x02\x02\x9B\x9C\x07/\x02\x02\x9C\x9D\x07?\x02\x02\x9D" +
		"2\x03\x02\x02\x02\x9E\x9F\x07-\x02\x02\x9F\xA0\x07?\x02\x02\xA04\x03\x02" +
		"\x02\x02\xA1\xA2\x07}\x02\x02\xA26\x03\x02\x02\x02\xA3\xA4\x07\x7F\x02" +
		"\x02\xA48\x03\x02\x02\x02\xA5\xA6\x07A\x02\x02\xA6:\x03\x02\x02\x02\xA7" +
		"\xA8\x07<\x02\x02\xA8<\x03\x02\x02\x02\xA9\xAA\x07=\x02\x02\xAA>\x03\x02" +
		"\x02\x02\xAB\xAC\x07k\x02\x02\xAC\xAD\x07h\x02\x02\xAD@\x03\x02\x02\x02" +
		"\xAE\xAF\x07g\x02\x02\xAF\xB0\x07n\x02\x02\xB0\xB1\x07u\x02\x02\xB1\xB2" +
		"\x07g\x02\x02\xB2B\x03\x02\x02\x02\xB3\xB4\x07y\x02\x02\xB4\xB5\x07j\x02" +
		"\x02\xB5\xB6\x07k\x02\x02\xB6\xB7\x07n\x02\x02\xB7\xB8\x07g\x02\x02\xB8" +
		"D\x03\x02\x02\x02\xB9\xBA\x07f\x02\x02\xBA\xBB\x07q\x02\x02\xBBF\x03\x02" +
		"\x02\x02\xBC\xBD\x07h\x02\x02\xBD\xBE\x07q\x02\x02\xBE\xBF\x07t\x02\x02" +
		"\xBFH\x03\x02\x02\x02\xC0\xC1\x07]\x02\x02\xC1J\x03\x02\x02\x02\xC2\xC3" +
		"\x07_\x02\x02\xC3L\x03\x02\x02\x02\xC4\xC5\x07r\x02\x02\xC5\xC6\x07t\x02" +
		"\x02\xC6\xC7\x07k\x02\x02\xC7\xC8\x07p\x02\x02\xC8\xC9\x07v\x02\x02\xC9" +
		"\xCA\x07h\x02\x02\xCA\xCB\x07*\x02\x02\xCBN\x03\x02\x02\x02\xCC\xCE\t" +
		"\x02\x02\x02\xCD\xCC\x03\x02\x02\x02\xCE\xCF\x03\x02\x02\x02\xCF\xCD\x03" +
		"\x02\x02\x02\xCF\xD0\x03\x02\x02\x02\xD0\xD1\x03\x02\x02\x02\xD1\xD2\b" +
		"(\x02\x02\xD2P\x03\x02\x02\x02\xD3\xD5\x07\x0F\x02\x02\xD4\xD6\x07\f\x02" +
		"\x02\xD5\xD4\x03\x02\x02\x02\xD5\xD6\x03\x02\x02\x02\xD6\xD9\x03\x02\x02" +
		"\x02\xD7\xD9\x07\f\x02\x02\xD8\xD3\x03\x02\x02\x02\xD8\xD7\x03\x02\x02" +
		"\x02\xD9\xDA\x03\x02\x02\x02\xDA\xDB\b)\x02\x02\xDBR\x03\x02\x02\x02\xDC" +
		"\xDD\x07x\x02\x02\xDD\xDE\x07q\x02\x02\xDE\xDF\x07k\x02\x02\xDF\xFB\x07" +
		"f\x02\x02\xE0\xE1\x07e\x02\x02\xE1\xE2\x07j\x02\x02\xE2\xE3\x07c\x02\x02" +
		"\xE3\xFB\x07t\x02\x02\xE4\xE5\x07k\x02\x02\xE5\xE6\x07p\x02\x02\xE6\xFB" +
		"\x07v\x02\x02\xE7\xE8\x07h\x02\x02\xE8\xE9\x07n\x02\x02\xE9\xEA\x07q\x02" +
		"\x02\xEA\xEB\x07c\x02\x02\xEB\xFB\x07v\x02\x02\xEC\xED\x07u\x02\x02\xED" +
		"\xEE\x07k\x02\x02\xEE\xEF\x07i\x02\x02\xEF\xF0\x07p\x02\x02\xF0\xF1\x07" +
		"g\x02\x02\xF1\xFB\x07f\x02\x02\xF2\xF3\x07w\x02\x02\xF3\xF4\x07p\x02\x02" +
		"\xF4\xF5\x07u\x02\x02\xF5\xF6\x07k\x02\x02\xF6\xF7\x07i\x02\x02\xF7\xF8" +
		"\x07p\x02\x02\xF8\xF9\x07g\x02\x02\xF9\xFB\x07f\x02\x02\xFA\xDC\x03\x02" +
		"\x02\x02\xFA\xE0\x03\x02\x02\x02\xFA\xE4\x03\x02\x02\x02\xFA\xE7\x03\x02" +
		"\x02\x02\xFA\xEC\x03\x02\x02\x02\xFA\xF2\x03\x02\x02\x02\xFBT\x03\x02" +
		"\x02\x02\xFC\xFD\t\x03\x02\x02\xFDV\x03\x02\x02\x02\xFE\u0100\x05U+\x02" +
		"\xFF\xFE\x03\x02\x02\x02\xFF\u0100\x03\x02\x02\x02\u0100\u0101\x03\x02" +
		"\x02\x02\u0101\u0105\t\x04\x02\x02\u0102\u0104\t\x05\x02\x02\u0103\u0102" +
		"\x03\x02\x02\x02\u0104\u0107\x03\x02\x02\x02\u0105\u0103\x03\x02\x02\x02" +
		"\u0105\u0106\x03\x02\x02\x02\u0106X\x03\x02\x02\x02\u0107\u0105\x03\x02" +
		"\x02\x02\u0108\u0109\x07$\x02\x02\u0109\u010A\x07\'\x02\x02\u010A\u010B" +
		"\x07f\x02\x02\u010B\u010C\x03\x02\x02\x02\u010C\u0127\x07$\x02\x02\u010D" +
		"\u010E\x07$\x02\x02\u010E\u010F\x07\'\x02\x02\u010F\u0110\x07k\x02\x02" +
		"\u0110\u0111\x03\x02\x02\x02\u0111\u0127\x07$\x02\x02\u0112\u0113\x07" +
		"$\x02\x02\u0113\u0114\x07\'\x02\x02\u0114\u0115\x07e\x02\x02\u0115\u0116" +
		"\x03\x02\x02\x02\u0116\u0127\x07$\x02\x02\u0117\u0118\x07$\x02\x02\u0118" +
		"\u0119\x07\'\x02\x02\u0119\u011A\x07h\x02\x02\u011A\u011B\x03\x02\x02" +
		"\x02\u011B\u0127\x07$\x02\x02\u011C\u011D\x07$\x02\x02\u011D\u011E\x07" +
		"\'\x02\x02\u011E\u011F\x07u\x02\x02\u011F\u0120\x03\x02\x02\x02\u0120" +
		"\u0127\x07$\x02\x02\u0121\u0122\x07$\x02\x02\u0122\u0123\x07\'\x02\x02" +
		"\u0123\u0124\x07r\x02\x02\u0124\u0125\x03\x02\x02\x02\u0125\u0127\x07" +
		"$\x02\x02\u0126\u0108\x03\x02\x02\x02\u0126\u010D\x03\x02\x02\x02\u0126" +
		"\u0112\x03\x02\x02\x02\u0126\u0117\x03\x02\x02\x02\u0126\u011C\x03\x02" +
		"\x02\x02\u0126\u0121\x03\x02\x02\x02\u0127Z\x03\x02\x02\x02\u0128\u012A" +
		"\x05U+\x02\u0129\u0128\x03\x02\x02\x02\u0129\u012A\x03\x02\x02\x02\u012A" +
		"\u012C\x03\x02\x02\x02\u012B\u012D\t\x06\x02\x02\u012C\u012B\x03\x02\x02" +
		"\x02\u012D\u012E\x03\x02\x02\x02\u012E\u012C\x03\x02\x02\x02\u012E\u012F" +
		"\x03\x02\x02\x02\u012F\\\x03\x02\x02\x02\u0130\u0131\x07)\x02\x02\u0131" +
		"\u0132\n\x07\x02\x02\u0132\u0133\x07)\x02\x02\u0133^\x03\x02\x02\x02\u0134" +
		"\u0136\x042;\x02\u0135\u0134\x03\x02\x02\x02\u0136\u0137\x03\x02\x02\x02" +
		"\u0137\u0135\x03\x02\x02\x02\u0137\u0138\x03\x02\x02\x02\u0138\u0139\x03" +
		"\x02\x02\x02\u0139\u013D\x070\x02\x02\u013A\u013C\x042;\x02\u013B\u013A" +
		"\x03\x02\x02\x02\u013C\u013F\x03\x02\x02\x02\u013D\u013B\x03\x02\x02\x02" +
		"\u013D\u013E\x03\x02\x02\x02\u013E`\x03\x02\x02\x02\u013F\u013D\x03\x02" +
		"\x02\x02\u0140\u0141\x07-\x02\x02\u0141\u0142\x07-\x02\x02\u0142b\x03" +
		"\x02\x02\x02\u0143\u0144\x07/\x02\x02\u0144\u0145\x07/\x02\x02\u0145d" +
		"\x03\x02\x02\x02\x0E\x02\xCF\xD5\xD8\xFA\xFF\u0105\u0126\u0129\u012E\u0137" +
		"\u013D\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!ClangLexer.__ATN) {
			ClangLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(ClangLexer._serializedATN));
		}

		return ClangLexer.__ATN;
	}

}

